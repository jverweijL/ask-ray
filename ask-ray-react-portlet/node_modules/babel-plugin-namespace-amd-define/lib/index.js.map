{"version":3,"sources":["../src/index.js"],"names":["namespaceCount","namespaceVisitor","Identifier","path","node","name","parent","type","property","key","scope","bindings","define","globals","namespace","opts","visitor","Program","exit","state","traverse","get","info"],"mappings":";;;;;;kBAOe,YAAW;AACzB,KAAIA,uBAAJ;;AAEA,KAAMC,mBAAmB;AACxBC,YADwB,sBACbC,IADa,EACP;AAChB,OAAIA,KAAKC,IAAL,CAAUC,IAAV,KAAmB,QAAvB,EAAiC;AAChC,QACCF,KAAKG,MAAL,CAAYC,IAAZ,KAAqB,kBAArB,IACAJ,KAAKG,MAAL,CAAYE,QAAZ,KAAyBL,KAAKC,IAF/B,EAGE;AACD;AACA;;AAED,QACCD,KAAKG,MAAL,CAAYC,IAAZ,KAAqB,gBAArB,IACAJ,KAAKG,MAAL,CAAYG,GAAZ,KAAoBN,KAAKC,IAF1B,EAGE;AACD;AACA;;AAED,QAAIM,cAAJ;;AAEA;AACA,SAAKA,QAAQP,KAAKO,KAAlB,EAAyBA,SAAS,IAAlC,EAAwCA,QAAQA,MAAMJ,MAAtD,EAA8D;AAC7D,SAAII,MAAMC,QAAN,CAAeC,MAAf,IAAyBF,MAAMG,OAAN,CAAcD,MAA3C,EAAmD;AAClD;AACA;AACD;;AAED;AACA;AACA,QACCF,SAAS,IAAT,IACCA,MAAMJ,MAAN,IAAgB,IAAhB,IAAwB,CAACI,MAAMC,QAAN,CAAeC,MAF1C,EAGE;AACD,SAAME,YAAY,KAAKC,IAAL,CAAUD,SAAV,IAAuB,gBAAzC;;AAEAX,UAAKC,IAAL,CAAUC,IAAV,GAAoBS,SAApB;;AAEAd;AACA;AACD;AACD;AAvCuB,EAAzB;;AA0CA,QAAO;AACNgB,WAAS;AACRC,YAAS;AACRC,QADQ,gBACHf,IADG,EACGgB,KADH,EACU;AACjB;AACA;AACA;AACAnB,sBAAiB,CAAjB;;AAEAG,UAAKiB,QAAL,CAAcnB,gBAAd,EAAgC,EAACc,MAAMI,MAAMJ,IAAb,EAAhC;;AAEA,SAAIf,iBAAiB,CAArB,EAAwB;AACvB,6BAAaqB,GAAb,CAAiBF,KAAjB,EAAwBG,IAAxB,CACC,sBADD,EAEC,YAFD,EAGCtB,cAHD,EAIC,aAJD;AAMA;AACD;AAjBO;AADD;AADH,EAAP;AAuBA,C;;AA3ED","file":"index.js","sourcesContent":["import PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\n\n/**\n * Valid babel plugin options are:\n *     namespace: 'Liferay.Loader'\n * @return {object} a babel visitor\n */\nexport default function() {\n\tlet namespaceCount;\n\n\tconst namespaceVisitor = {\n\t\tIdentifier(path) {\n\t\t\tif (path.node.name === 'define') {\n\t\t\t\tif (\n\t\t\t\t\tpath.parent.type === 'MemberExpression' &&\n\t\t\t\t\tpath.parent.property === path.node\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tpath.parent.type === 'ObjectProperty' &&\n\t\t\t\t\tpath.parent.key === path.node\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet scope;\n\n\t\t\t\t// Find if 'define' is defined in any scope\n\t\t\t\tfor (scope = path.scope; scope != null; scope = scope.parent) {\n\t\t\t\t\tif (scope.bindings.define || scope.globals.define) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If 'define' is not defined in any scope namespace or defined\n\t\t\t\t// in the root scope as global, namespace it\n\t\t\t\tif (\n\t\t\t\t\tscope == null ||\n\t\t\t\t\t(scope.parent == null && !scope.bindings.define)\n\t\t\t\t) {\n\t\t\t\t\tconst namespace = this.opts.namespace || 'Liferay.Loader';\n\n\t\t\t\t\tpath.node.name = `${namespace}.define`;\n\n\t\t\t\t\tnamespaceCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n\n\treturn {\n\t\tvisitor: {\n\t\t\tProgram: {\n\t\t\t\texit(path, state) {\n\t\t\t\t\t// We must traverse the AST again because the third party\n\t\t\t\t\t// transform-es2015-modules-amd emits its define() call after\n\t\t\t\t\t// Program exit :-(\n\t\t\t\t\tnamespaceCount = 0;\n\n\t\t\t\t\tpath.traverse(namespaceVisitor, {opts: state.opts});\n\n\t\t\t\t\tif (namespaceCount > 0) {\n\t\t\t\t\t\tPluginLogger.get(state).info(\n\t\t\t\t\t\t\t'namespace-amd-define',\n\t\t\t\t\t\t\t'Namespaced',\n\t\t\t\t\t\t\tnamespaceCount,\n\t\t\t\t\t\t\t'AMD defines'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n}\n"]}