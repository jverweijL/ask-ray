// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not namespace already qualified define calls 1`] = `
"
Other.Namespace.define([], function () {});"
`;

exports[`does not namespace references to local define identifier when it is a function 1`] = `
"
function define(x) {
	console.log(define);
}"
`;

exports[`does not namespace references to local define identifier when it is a function parameter 1`] = `
"
function fn(define) {
	console.log(define);
};"
`;

exports[`does not namespace references to local define identifier when it is a variable 1`] = `
"
let define = 'x';

if (true) {
	if (true) {
		console.log(define);
	}
}"
`;

exports[`does not namespace references to local define identifier when it is an object field 1`] = `
"
var a = {
	define: function (name, value) {
		return name;
	}
};"
`;

exports[`logs results correctly 1`] = `
Array [
  Object {
    "level": "info",
    "source": "namespace-amd-define",
    "things": Array [
      "Namespaced",
      3,
      "AMD defines",
    ],
  },
]
`;

exports[`namespaces references to global define identifier 1`] = `
"
if (typeof Liferay.Loader.define === \\"function\\" && Liferay.Loader.define.amd) {
	console.log('UMD!');
}"
`;

exports[`namespaces unqualified define calls 1`] = `
"
Liferay.Loader.define([], function () {});"
`;
