{"version":3,"sources":["../../src/__tests__/index.test.js"],"names":["babel","logger","beforeEach","set","__filename","it","source","transform","filenameRelative","plugins","expect","messages","toMatchSnapshot","code"],"mappings":";;AAAA;;IAAYA,K;;AACZ;;;;AACA;;;;;;;;AAEA,IAAIC,eAAJ;;AAEAC,WAAW,YAAM;AAChB,wBAAaC,GAAb,CAAiBC,UAAjB,EAA8BH,SAAS,4BAAvC;AACA,CAFD;;AAIAI,GAAG,wBAAH,EAA6B,YAAM;AAClC,KAAMC,sHAAN;;AAMAN,OAAMO,SAAN,CAAgBD,MAAhB,EAAwB;AACvBE,oBAAkBJ,UADK;AAEvBK,WAAS;AAFc,EAAxB;;AAKAC,QAAOT,OAAOU,QAAd,EAAwBC,eAAxB;AACA,CAbD;;AAeAP,GAAG,yBAAH,EAA8B,YAAM;AACnC,KAAMC,6JAAN;;AADmC,wBASpBN,MAAMO,SAAN,CAAgBD,MAAhB,EAAwB;AACtCE,oBAAkBJ,UADoB;AAEtCK,WAAS;AAF6B,EAAxB,CAToB;AAAA,KAS5BI,IAT4B,oBAS5BA,IAT4B;;AAcnCH,QAAOG,IAAP,EAAaD,eAAb;AACA,CAfD","file":"index.test.js","sourcesContent":["import * as babel from 'babel-core';\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\nimport plugin from '../index';\n\nlet logger;\n\nbeforeEach(() => {\n\tPluginLogger.set(__filename, (logger = new PluginLogger()));\n});\n\nit('logs results correctly', () => {\n\tconst source = `\n\tconsole.log('Say something');\n\tvar a = require('a-module');\n\tvar b = require('b-module');\n\t`;\n\n\tbabel.transform(source, {\n\t\tfilenameRelative: __filename,\n\t\tplugins: [plugin],\n\t});\n\n\texpect(logger.messages).toMatchSnapshot();\n});\n\nit('correctly wraps modules', () => {\n\tconst source = `\n\tconsole.log('Say something');\n\tif (1 == 0) {\n\t\tconsole.log('Something broke in the Matrix');\n\t}\n\tmodule.exports = 'All OK';\n\t`;\n\n\tconst {code} = babel.transform(source, {\n\t\tfilenameRelative: __filename,\n\t\tplugins: [plugin],\n\t});\n\n\texpect(code).toMatchSnapshot();\n});\n"]}